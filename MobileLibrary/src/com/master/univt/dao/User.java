package com.master.univt.dao;

// THIS CODE IS GENERATED BY greenDAO, EDIT ONLY INSIDE THE "KEEP"-SECTIONS

import java.io.Serializable;
import java.util.List;

import com.google.gson.annotations.SerializedName;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.DaoException;

// KEEP INCLUDES END
/**
 * Entity mapped to table USER.
 */
public class User implements Serializable
{

  /**
	 * 
	 */
  private static final long serialVersionUID = -6653450939813235814L;
  protected Long id;
  /** Not-null value. */
  @SerializedName("UID")
  protected String uId;
  @SerializedName("Username")
  protected String username;
  @SerializedName("Name")
  protected String name;



  /** Used to resolve relations */
  protected transient DaoSession daoSession;

  /** Used for active entity operations. */
  protected transient UserDao myDao;


  public User()
  {
  }

  public User(final Long id)
  {
    this.id = id;
  }

  public User(final Long id, final String uId, final String username, final String name)
  {
    this.id = id;
    this.uId = uId;
    this.username = username;
    this.name = name;
  }

  /** called by internal mechanisms, do not call yourself. */
  public void __setDaoSession(final DaoSession daoSession)
  {
    this.daoSession = daoSession;
    myDao = daoSession != null ? daoSession.getUserDao() : null;
  }

  public Long getId()
  {
    return id;
  }

  public void setId(final Long id)
  {
    this.id = id;
  }

  /** Not-null value. */
  public String getUId()
  {
    return uId;
  }

  /** Not-null value; ensure this value is available before it is saved to the database. */
  public void setUId(final String uId)
  {
    this.uId = uId;
  }

  public String getUsername()
  {
    return username;
  }

  public void setUsername(final String username)
  {
    this.username = username;
  }

  public String getName()
  {
    return name;
  }

  public void setName(final String name)
  {
    this.name = name;
  }


  public void updateNotNull(final User other)
  {
    if (other == null || this == other)
    {
      return;// both came from db, no need to run this.
    }

    if (other.id != null)
    {
      this.id = other.id;
    }

    if (other.uId != null)
    {
      this.uId = other.uId;
    }

    if (other.username != null)
    {
      this.username = other.username;
    }

    if (other.name != null)
    {
      this.name = other.name;
    }


    // relationships
    // if (other.getCourses() != null)
    // {
    // courses = (other.getCourses());
    // }
    // if (other.getLectures() != null)
    // {
    // lectures = (other.getLectures());
    // }
  }

  // KEEP METHODS - put your custom methods here
  // KEEP METHODS END

  public void onBeforeSave()
  {
    // you can override this method and do some stuff if you want to :)

  }
}
